/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.apache.geode.gradle.plugins.DependencyConstraints

apply from: "${rootDir}/${scriptDir}/standard-subproject-configuration.gradle"
apply from: "${rootDir}/${scriptDir}/warnings.gradle"
apply from: "${rootDir}/${scriptDir}/publish-java.gradle"

evaluationDependsOn(":geode-core")

dependencies {
  // main
  implementation(platform(project(':boms:geode-all-bom')))

  api(project(':geode-core'))
  api(project(':extensions:geode-modules'))

  compileOnly(platform(project(':boms:geode-all-bom')))
  compileOnly('org.apache.tomcat:tomcat-catalina:' + DependencyConstraints.get('tomcat8.version'))
  compileOnly('org.apache.tomcat:tomcat-coyote:' + DependencyConstraints.get('tomcat8.version'))
  compileOnly('org.apache.tomcat:tomcat-juli:' + DependencyConstraints.get('tomcat8.version'))
  compileOnly('org.apache.tomcat:tomcat-servlet-api:' + DependencyConstraints.get('tomcat8.version'))
  compileOnly('org.apache.tomcat:tomcat-util:' + DependencyConstraints.get('tomcat8.version'))


  // test
  testImplementation(project(':extensions:geode-modules-test'))
  testImplementation('junit:junit')
  testImplementation('org.assertj:assertj-core')
  testImplementation('org.mockito:mockito-core')
  testImplementation('org.apache.tomcat:tomcat-catalina:' + DependencyConstraints.get('tomcat8.version'))
  testImplementation('org.apache.tomcat:tomcat-coyote:' + DependencyConstraints.get('tomcat8.version'))
  testImplementation('org.apache.tomcat:tomcat-juli:' + DependencyConstraints.get('tomcat8.version'))
  testImplementation('org.apache.tomcat:tomcat-servlet-api:' + DependencyConstraints.get('tomcat8.version'))
  testImplementation('org.apache.tomcat:tomcat-util:' + DependencyConstraints.get('tomcat8.version'))


  // integrationTest
  integrationTestImplementation(project(':extensions:geode-modules-test'))
  integrationTestImplementation(project(':geode-dunit'))
  integrationTestImplementation('org.apache.tomcat:tomcat-catalina:' + DependencyConstraints.get('tomcat8.version'))
  integrationTestImplementation('org.mockito:mockito-core')
  integrationTestImplementation('junit:junit')


  // distributedTest
  distributedTestImplementation(project(':extensions:geode-modules-test'))
  distributedTestImplementation(project(':geode-dunit'))
  distributedTestImplementation(project(':geode-logging'))
  distributedTestImplementation('org.httpunit:httpunit')
  distributedTestImplementation('org.apache.tomcat:tomcat-catalina:' + DependencyConstraints.get('tomcat8.version'))
  distributedTestImplementation('junit:junit')
  distributedTestImplementation('org.apache.logging.log4j:log4j-api')
  distributedTestImplementation('org.apache.tomcat:tomcat-jaspic-api:' + DependencyConstraints.get('tomcat8.version'))
  distributedTestImplementation('org.apache.tomcat:tomcat-servlet-api:' + DependencyConstraints.get('tomcat8.version'))
  distributedTestImplementation('org.assertj:assertj-core')
  distributedTestImplementation('org.awaitility:awaitility')

}

sonarqube {
  skipProject = true
}
