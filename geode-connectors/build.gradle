/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

evaluationDependsOn(":geode-core")

repositories {
  maven {
    // docker-compose-rule is published on bintray
    url 'https://dl.bintray.com/palantir/releases'
  }
}

dependencies {
  compile project(':geode-core')
  compileOnly project(':geode-common')
  compile 'org.springframework.shell:spring-shell:' + project.'spring-shell.version'
  compile 'commons-lang:commons-lang:' + project.'commons-lang.version'
  compile 'javax.xml.bind:jaxb-api:' + project.'jaxb.version'
  compile 'org.apache.logging.log4j:log4j-api:' + project.'log4j.version'
  compile 'com.zaxxer:HikariCP:' + project.'HikariCP.version'

  runtime 'mysql:mysql-connector-java:' + project.'mysql-connector.version'


  testCompile(project(':geode-junit')) { exclude module: 'geode-core' }


  integrationTestCompile(project(":geode-dunit")) { exclude module: 'geode-core' }


  acceptanceTestCompile(project(":geode-dunit")) { exclude module: 'geode-core' }
  acceptanceTestCompile 'com.palantir.docker.compose:docker-compose-rule-core:' +  project.'docker-compose.version'
  acceptanceTestCompile 'com.palantir.docker.compose:docker-compose-rule-junit4:' + project.'docker-compose.version'

  acceptanceTestRuntime group: 'org.apache.derby', name: 'derby', version: project.'derby.version'
  acceptanceTestRuntime group: 'org.postgresql', name: 'postgresql', version: project.'postgresql.version'
}

integrationTest.forkEvery 0
