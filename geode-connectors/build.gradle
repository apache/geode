/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

evaluationDependsOn(":geode-core")

repositories {
  maven {
    // docker-compose-rule is published on bintray
    url 'https://dl.bintray.com/palantir/releases'
  }
}

apply from: "${project.projectDir}/../gradle/publish.gradle"


dependencies {
  compile(platform(project(':boms:geode-all-bom')))
  compile(project(':geode-common'))
  compile(project(':geode-core'))
  testCompile(project(':geode-junit')) {
    exclude module: 'geode-core'
  }
  integrationTestCompile(project(':geode-dunit')) {
    exclude module: 'geode-core'
  }
  integrationTestCompile(project(':geode-junit')) {
    exclude module: 'geode-core'
  }
  distributedTestCompile(project(':geode-junit')) {
    exclude module: 'geode-core'
  }
  distributedTestCompile(project(':geode-dunit')){
    exclude module: 'geode-core'
  }
  acceptanceTestCompile(project(':geode-dunit')) {
    exclude module: 'geode-core'
  }
  acceptanceTestCompile(project(':geode-junit')) {
    exclude module: 'geode-core'
  }

  compile('com.zaxxer:HikariCP')
  compile('org.apache.commons:commons-lang3')
  compile('javax.xml.bind:jaxb-api')
  compile('org.apache.logging.log4j:log4j-api')
  compile('org.apache.logging.log4j:log4j-jcl') {
    ext.optional = true
  }
  compile('org.springframework.shell:spring-shell') {
    exclude module: 'aopalliance'
    exclude module: 'asm'
    exclude module: 'cglib'
    exclude module: 'guava'
    exclude module: 'spring-aop'
    exclude module: 'spring-context-support'
    exclude module: 'spring-core'
    ext.optional = true
  }
  compile('com.healthmarketscience.rmiio:rmiio')

  testCompile('pl.pragmatists:JUnitParams')

  integrationTestCompile('junit:junit')
  integrationTestCompile('org.assertj:assertj-core')
  integrationTestCompile('pl.pragmatists:JUnitParams')

  distributedTestCompile('junit:junit')
  distributedTestCompile('org.assertj:assertj-core')
  distributedTestCompile('org.mockito:mockito-core')
  distributedTestCompile('pl.pragmatists:JUnitParams')
  distributedTestRuntime('org.apache.derby:derby')

  acceptanceTestCompile('com.github.stefanbirkner:system-rules') {
    exclude module: 'junit-dep'
  }
  acceptanceTestCompile('junit:junit')
  acceptanceTestCompile('org.assertj:assertj-core')
  acceptanceTestCompile('org.awaitility:awaitility')
  acceptanceTestCompile('org.mockito:mockito-core')
  acceptanceTestCompile('com.palantir.docker.compose:docker-compose-rule-core')
  acceptanceTestCompile('pl.pragmatists:JUnitParams')
  acceptanceTestCompile('com.palantir.docker.compose:docker-compose-rule-junit4')

  acceptanceTestRuntime('mysql:mysql-connector-java')
  acceptanceTestRuntime('org.apache.derby:derby')
  acceptanceTestRuntime('org.postgresql:postgresql')
}

integrationTest.forkEvery 0
