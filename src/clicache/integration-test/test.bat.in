@echo off
setlocal
rem set PATH=%PATH%;$<TARGET_LINKER_FILE_DIR:apache-geode>
rem set PATH=%PATH%;$<TARGET_LINKER_FILE_DIR:framework>
rem set PATH=%PATH%;$<TARGET_LINKER_FILE_DIR:testobject>
rem set PATH=%PATH%;$<TARGET_LINKER_FILE_DIR:SqLiteImpl>
rem set PATH=%PATH%;$<TARGET_LINKER_FILE_DIR:cryptoImpl>
rem set PATH=%PATH%;$<TARGET_LINKER_FILE_DIR:DHImpl>
rem set PATH=%PATH%;$<TARGET_LINKER_FILE_DIR:securityImpl>
rem set PATH=%PATH%;$<TARGET_LINKER_FILE_DIR:unit_test_callbacks>
rem set PATH=%PATH%;${DEPENDENCIES_openssl_DIR}/bin
rem set PATH=%PATH%;${DEPENDENCIES_sqlite_DIR}/bin
rem set PATH=%PATH%;${DEPENDENCIES_ACE_DIR}/lib
rem set PATH=%PATH%;${DEPENDENCIES_libxml2_DIR}/bin

set PATH=c:\Program Files (x86)\Nunit 2.6.4\bin;%PATH%

rem TODO: Figure out why this is needed
set GFCPP=c:\

set TESTSRC=${CMAKE_CURRENT_SOURCE_DIR}
set GF_JAVA=${Java_JAVA_EXECUTABLE}
set GFJAVA=${Geode_PATH}
set GFE_LOGLEVEL=config
set GFE_SECLOGLEVEL=config
set GFE_DIR=${Geode_PATH}
set MCAST_ADDR=224.10.13.63
set MCAST_PORT=${PORT}
set TIMEBOMB=3600
set GF_CLASSPATH=%GF_CLASSPATH%;${CMAKE_BINARY_DIR}/tests/javaobject/javaobject.jar
set PROFILERCMD=
set BUG481=
set TESTNAME=${TEST}
set LOG=${TEST}.log

rmdir /q /s "${TEST_DIR}" 2>nul
mkdir "${TEST_DIR}"
if %errorlevel% neq 0 exit /b %errorlevel%
pushd "${TEST_DIR}"
if %errorlevel% neq 0 exit /b %errorlevel%

rem In Windows, pipes to tee return tee's exit code instead of executable's
rem exit code. As a workaround we write exit codes to files.

rem ($<TARGET_FILE:${TEST}> && echo 0 >${TEST}.errorlevel || echo 1 >${TEST}.errorlevel) | tee %LOG%
(${NUNIT_CONSOLE} /run:${NAMESPACE}.${TESTCLASS} ..\..\${CMAKE_BUILD_TYPE}\UnitTests.dll 2>&1 && echo 0 >${TEST}.errorlevel || echo 1 >${TEST}.errorlevel) | tee %LOG%

set /p errorlevel= <${TEST}.errorlevel
if %errorlevel% neq 0 exit /b %errorlevel%

popd
exit /b
