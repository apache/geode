/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

allprojects {
  apply plugin: 'nebula.lint'
  gradleLint.rules = []
  gradleLint.rules += 'unused-dependency' ; // broken due to Error from [com.netflix.nebula.lint.rule.GradleLintRule$1] processing source file [null]
//  gradleLint.rules += 'unused-exclude-by-dep' ; // breaks some web bean tests
//  gradleLint.rules += 'unused-exclude-by-conf' ; // breaks some web bean tests
//  gradleLint.rules += 'duplicate-dependency-class' ; // broken due to Error from [com.netflix.nebula.lint.rule.GradleLintRule$1] processing source file [null]
  gradleLint.rules += 'undeclared-dependency'
//  gradleLint.rules += 'overridden-dependency-version'
//  gradleLint.rules += 'archaic-wrapper'
//  gradleLint.rules += 'deprecated-dependency-configuration'
//  gradleLint.rules += 'deprecated-task-operator'
//  gradleLint.rules += 'empty-closure-rule'

  gradleLint.alwaysRun = false
  fixGradleLint.mustRunAfter(':combineReports')
  fixLintGradle.mustRunAfter(':combineReports')
  lintGradle.mustRunAfter(':combineReports')
  gradleLint {
    reportFormat = 'html'
    reportOnlyFixableViolations = true
  }
}
