#!/bin/bash
set -e
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$<TARGET_LINKER_FILE_DIR:gfcppcache>
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$<TARGET_LINKER_FILE_DIR:framework>
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$<TARGET_LINKER_FILE_DIR:testobject>
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$<TARGET_LINKER_FILE_DIR:SqLiteImpl>
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$<TARGET_LINKER_FILE_DIR:cryptoImpl>
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$<TARGET_LINKER_FILE_DIR:DHImpl>
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$<TARGET_LINKER_FILE_DIR:securityImpl>
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$<TARGET_LINKER_FILE_DIR:unit_test_callbacks>
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${DEPENDENCIES_openssl_DIR}/lib
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${DEPENDENCIES_sqlite_DIR}/lib
export TESTSRC=${CMAKE_CURRENT_SOURCE_DIR}
export GF_JAVA=${Java_JAVA_EXECUTABLE}
export GFJAVA=${GEMFIRE_HOME}
export GFE_LOGLEVEL=config
export GFE_SECLOGLEVEL=config 
export MCAST_ADDR=224.10.13.63
export MCAST_PORT=${PORT}
export TIMEBOMB=1800
export GF_CLASSPATH=$GF_CLASSPATH:${CMAKE_BINARY_DIR}/javaobject.jar
export GF_CLASSPATH=$GF_CLASSPATH:${GEMFIRE_HOME}/lib/gfSecurityImpl.jar
export PROFILERCMD=
export BUG481=
export TESTNAME=${TEST}
rm -rf "${TEST_DIR}"
mkdir -p "${TEST_DIR}"
pushd "${TEST_DIR}"

# sub shell with -c to pipe to $LOG
# export LD_LIBRARY_PATH into subshell to work around OS X SIP
$SHELL -c "set -o pipefail;
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH;
$DEBUG $<TARGET_FILE:${TEST}> $LOG"
popd
