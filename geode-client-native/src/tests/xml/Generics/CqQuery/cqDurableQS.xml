<?xml version="1.0" encoding="UTF-8"?>
<test-driver version="1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../testDefinition.xsd">

  <data name="cacheType">CLIENT</data>
  <data name="redundancyLevel">1</data>

  <data name="distinctKeys">
   <list>
     <item>100</item>
   </list>
  </data>

  <data name="valueSizes">
   <list>
     <item>100</item>
   </list>
  </data>

  <data name="keyType">int</data>

 <!--Default Values for this test only-->
 <data name="isDurable">true</data>
 <data name="keepAlive">true</data>
 <data name="durableTimeout">120</data>
 <data name="updateReceiveTime">60</data>
 <data name="registerAndExecuteCQs">true</data>
 <data name="executeWithIR">false</data>
 <data name="cq">true</data>
 <data name="invalidate">true</data>

<data name="ThinClientRegion">
  <snippet>
    <region name="dummyRegion">
      <region-attributes caching-enabled="true" client-notification="true">
      </region-attributes>
    </region>
  </snippet>
</data>
<data name="regionSpec">ThinClientRegion</data>
<client-set name="JCS1" hostGroup="CS"/>
<client-set name="JCS2" hostGroup="CS"/>
<client-set name="Feeder"/>
<client-set name="DClient1"/>
<client-set name="NDClient1"/>

<test name="CqDurableQS" description="Test for testing Cq and Query Service for durable and non durable clients,along with event based validation .">
  <task name="SetupCacheServer CS1" action="doRunProcess" container="utils" waitTime="5m">
    <data name="program">setupJavaServers</data>
    <data name="arguments">-c 2 -e CLASSPATH=\$BUILDDIR/framework/lib/javaobject.jar:\$CLASSPATH Generics/RemoteQuery/csAckMirror.xml</data>
    <client-set name="JCS1"/>
  </task>
<task name="StartCacheServer 1" action="doRunProcess" container="utils" waitTime="5m" parallel="true">
  <data name="program">startJavaServers</data>
  <data name="arguments">1</data>
  <client-set name="JCS1"/>
</task>
<task name="StartCacheServer 2" action="doRunProcess" container="utils" waitTime="5m" parallel="true">
  <data name="program">startJavaServers</data>
  <data name="arguments">2</data>
  <client-set name="JCS2"/>
</task>
<task name="CreateRegion" action="doCreateUserDefineRegion" container="NewFwkLib.GemStone.GemFire.Cache.FwkLib.querytests" argTypes="String,Portfolio" waitTime="5m">
  <data name="regionName">dummyRegion</data>
  <data name="regionSpec">ThinClientRegion</data>
  <client-set name="DClient1"/>
</task>
<task name="CreateRegion" action="doCreateUserDefineRegion" container="NewFwkLib.GemStone.GemFire.Cache.FwkLib.querytests" argTypes="String,Portfolio" waitTime="5m">
  <data name="regionName">dummyRegion</data>
  <data name="regionSpec">ThinClientRegion</data>
  <data name="isDurable">false</data>
  <client-set name="NDClient1"/>
</task>
<task name="CreateRegion" action="doCreateUserDefineRegion" container="NewFwkLib.GemStone.GemFire.Cache.FwkLib.querytests" argTypes="String,Portfolio" waitTime="5m">
  <data name="regionName">dummyRegion</data>
  <data name="regionSpec">ThinClientRegion</data>
  <client-set name="Feeder"/>
</task>
<task name="Register All Keys Durable" action="doRegisterAllKeys" container="NewFwkLib.GemStone.GemFire.Cache.FwkLib.querytests" argTypes="String,Portfolio" waitTime="5m">
  <client-set name="DClient1"/>
  <data name="isDurableReg">true</data>
</task>
<task name="Register All Keys Durable" action="doRegisterAllKeys" container="NewFwkLib.GemStone.GemFire.Cache.FwkLib.querytests" argTypes="String,Portfolio" waitTime="5m">
  <client-set name="NDClient1"/>
</task>
<task name="Register CQ" action="doRegisterCqForConc" container="NewFwkLib.GemStone.GemFire.Cache.FwkLib.querytests" argTypes="String,Portfolio" waitTime="5m">
  <client-set name="DClient1"/>
  <data name="isDurableC">true</data>
  <data name="query">
    <list>
      <item>select * from /dummyRegion</item>
    </list>
   </data>
</task>
<task name="Register CQ" action="doRegisterCqForConc" container="NewFwkLib.GemStone.GemFire.Cache.FwkLib.querytests" argTypes="String,Portfolio" waitTime="5m">
  <client-set name="NDClient1"/>
  <data name="isDurableC">false</data>
  <data name="query">
    <list>
      <item>select * from /dummyRegion</item>
    </list>
  </data>
</task>
<!--task name="stop all cqs" action="doCqState" container="NewFwkLib.GemStone.GemFire.Cache.FwkLib.querytests" argTypes="String,Portfolio" waitTime="5m">
  <data name="cqState">stopped</data>
  <client-set name="NDClient1"/>
  <client-set  name="DClient1"/>
</task>
<task name="do random entry ops on portfolio" action="doEntryOperations" container="NewFwkLib.GemStone.GemFire.Cache.FwkLib.cacheserver" argTypes="String,Portfolio" waitTime="15m" parallel="true">
  <data name="entryOps">
    <oneof>
      <item>add</item>
      <item>add</item>
    </oneof>
  </data>
  <data name="workTime">2m</data>
  <data name="opsSecond">5</data>
  <data name="entryCount">100</data>
  <data name="valueSizes">100</data>
  <data name="regionName">dummyRegion</data>
  <data name="objectType">Portfolio</data>
  <client-set name="Feeder"/>
</task>
<task name="Validate CQs for DC" action="doValidateCq" container="NewFwkLib.GemStone.GemFire.Cache.FwkLib.querytests" argTypes="String,Portfolio" waitTime="5m">
  <client-set name="DClient1"/>
  <data name="isDurableC">true</data>
</task>
<task name="Validate CQs for NDC" action="doValidateCq" container="NewFwkLib.GemStone.GemFire.Cache.FwkLib.querytests" argTypes="String,Portfolio" waitTime="5m">
  <client-set name="NDClient1"/>
  <data name="isDurableC">false</data>
</task>
<task name="verify CQ listener is called" action="doVerifyCQListenerInvoked" container="NewFwkLib.GemStone.GemFire.Cache.FwkLib.querytests" argTypes="String,Portfolio" waitTime="5m">
  <client-set  name="DClient1"/>
  <client-set name="NDClient1"/>
  <data name="checkEvents">true</data>
  <data name="stopped">true</data>
</task>
<task name="execute all cqs" action="doCqState" container="NewFwkLib.GemStone.GemFire.Cache.FwkLib.querytests" argTypes="String,Portfolio" waitTime="5m">
  <data name="cqState">execute</data>
  <client-set name="NDClient1"/>
  <client-set  name="DClient1"/>
</task-->
<task name="do random entry ops on portfolio" action="doEntryOperations" container="NewFwkLib.GemStone.GemFire.Cache.FwkLib.cacheserver" argTypes="String,Portfolio" waitTime="15m" parallel="true">
  <data name="entryOps">
    <oneof>
      <item>add</item>
       <item>invalidate</item>
      <item>add</item>
    </oneof>
  </data>
  <data name="workTime">3m</data>
  <data name="opsSecond">5</data>
  <data name="entryCount">100</data>
  <data name="valueSizes">100</data>
  <data name="regionName">dummyRegion</data>
  <data name="objectType">Portfolio</data>
  <client-set name="Feeder"/>
</task>
<task name="verify CQ listener is called" action="doVerifyCQListenerInvoked" container="NewFwkLib.GemStone.GemFire.Cache.FwkLib.querytests" argTypes="String,Portfolio" waitTime="5m">
 <client-set  name="DClient1"/>
 <client-set name="NDClient1"/>
 <data name="checkEvents">true</data>
 <data name="execute">true</data>
</task>
<task name="Close Cache" action="doCloseCache" container="NewFwkLib.GemStone.GemFire.Cache.FwkLib.querytests" argTypes="String,Portfolio" waitTime="5m"/>
<task name="StopCacheServer 1" action="doRunProcess" container="utils" waitTime="5m" parallel="true">
  <data name="program">stopJavaServers</data>
  <data name="arguments">1</data>
  <client-set name="JCS1"/>
</task>
<task name="StopCacheServer 2" action="doRunProcess" container="utils" waitTime="5m" parallel="true">
  <data name="program">stopJavaServers</data>
  <data name="arguments">2</data>
  <client-set name="JCS2"/>
</task>
</test>
</test-driver>
