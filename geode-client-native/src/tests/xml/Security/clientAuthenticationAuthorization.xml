<?xml version="1.0" encoding="UTF-8"?>
<test-driver version="1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../testDefinition.xsd">
  <data name="BBName">CacheServer</data>
  <data name="cacheType">CLIENT</data>
  <data name="securityScheme">
   <list>
     <item>LDAP</item>
     <item>DUMMY</item>
     <item>PKCS</item>
     <item>NONE</item>
   </list>
  </data>

  <data name="distinctKeys">
    <list>
      <item>10</item>
    </list>
  </data>

  <data name="valueSizes">
    <list>
      <item>1000</item>
    </list>
  </data>
  <data name="numThreads">
    <list>
      <item>10</item>
    </list>
  </data>

  <data name="ThinClientRegion">
    <snippet>
      <region name="TestTCR1">
        <region-attributes caching-enabled="false" client-notification="true">
          <cache-listener library="perftests" function="createPerfTestCacheListener"/>
        </region-attributes>
      </region>
    </snippet>
  </data>
  <data name="regionSpec">ThinClientRegion</data>
  <data name="regionName">TestTCR1</data>


  <client-set name="Feeder"/>
  <client-set name="JCS1" hostGroup="CS"/>
  <client-set count="1" name="Admin"/>
  <client-set count="1" name="Reader"/>
  <client-set count="1" name="Writer"/>
  <client-set count="1" name="Query"/>
  <client-set count="1" name="Register"/>

  <test name="Thin Client AuthN AuthZ" description="Clients performs allowed/disallowed operations" timesToRun="4">
    <task name="SetupCacheServer" action="doRunProcess" container="utils" waitTime="5m">
      <data name="program">setupJavaServers</data>
      <data name="arguments">-c 1 Native/csAckMirror.xml</data>
      <client-set name="JCS1"/>
    </task>
    <task name="StartCacheServer 1" action="doRunProcess" container="utils" waitTime="10m" parallel="true">
      <data name="program">startJavaServers</data>
      <data name="arguments">1</data>
      <data name="securityParams">:authenticator:authorizer</data>
      <client-set name="JCS1"/>
    </task>

    <task name="Init Feeder" action="doCreateRegion" container="perftests" waitTime="10m">
      <data name="securityParams">
        <list>
          <item>create</item>
        </list>
      </data>
      <client-set name="Feeder"/>
    </task>
    <task name="CreateClients" action="doCreateRegion" container="perftests" waitTime="10m">
      <data name="securityParams">
        <list>
          <item>get</item>
          <item>create</item>
          <item>update</item>
          <item>invalidate</item>
          <item>destroy</item>
          <item>register_interest</item>
        </list>
      </data>
      <client-set count="1" name="Admin"/>
    </task>
    <task name="CreateClients" action="doCreateRegion" container="perftests" waitTime="10m">
      <data name="securityParams">
        <list>
          <item>get</item>
          <item>register_interest</item>
        </list>
      </data>
      <client-set count="1" name="Reader"/>
    </task>
    <task name="CreateClients" action="doCreateRegion" container="perftests" waitTime="10m">
      <data name="securityParams">
        <list>
          <item>create</item>
          <item>update</item>
          <item>invalidate</item>
        </list>
      </data>
      <client-set count="1" name="Writer"/>
    </task>
    <task name="CreateClients" action="doCreateRegion" container="perftests" waitTime="10m">
      <data name="securityParams">
        <list>
          <item>query</item>
        </list>
      </data>
      <client-set count="1" name="Query"/>
    </task>
    <task name="CreateClients" action="doCreateRegion" container="perftests" waitTime="10m">
      <data name="securityParams">
        <list>
          <item>register_interest</item>
          <item>unregister_interest</item>
        </list>
      </data>
      <client-set count="1" name="Register"/>
    </task>

    <task name="Register All Keys" action="doRegisterAllKeys" container="perftests" waitTime="2m">
      <client-set count="1" name="Admin"/>
      <client-set count="1" name="Reader"/>
      <client-set count="1" name="Register"/>
    </task>
    <task name="PopulateRegion" action="doPopulateRegion" container="perftests" waitTime="15m">
      <client-set name="Feeder"/>
    </task>
    <task name="Client Events" action="doEntryOperations" container="cacheserver" waitTime="10h10m">
      <data name="entryOps">
        <oneof>
          <item>add</item>
          <item>update</item>
          <item>update</item>
          <item>update</item>
          <item>read</item>
          <item>read</item>
          <item>read</item>
          <item>invalidate</item>
          <item>destroy</item>
        </oneof>
      </data>
      <data name="workTime">30s</data>
      <data name="opsSecond">12</data>
      <data name="entryCount">50</data>
      <data name="valueSizes">100</data>
      <client-set count="1" name="Admin"/>
    </task>
    <task name="Client Events" action="doEntryOperations" container="security" waitTime="10h10m">
      <data name="entryOps">
        <oneof>
          <item>add</item>
          <item>update</item>
          <item>update</item>
          <item>update</item>
          <item>invalidate</item>
          <item>destroy</item>
        </oneof>
      </data>
      <data name="workTime">10s</data>
      <data name="opsSecond">12</data>
      <data name="entryCount">50</data>
      <data name="valueSizes">100</data>
      <client-set name="Feeder"/>
      <client-set count="1" name="Writer"/>
    </task>
    <task name="Close Cache" action="doCloseCache" container="perftests" waitTime="2m"/>
    <task name="StopCacheServer 1" action="doRunProcess" container="utils" waitTime="10m">
      <data name="program">stopJavaServers</data>
      <data name="arguments">1</data>
      <client-set name="JCS1"/>
    </task>

  </test>
</test-driver>
