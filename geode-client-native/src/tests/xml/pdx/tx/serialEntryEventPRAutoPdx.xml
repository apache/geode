<?xml version="1.0" encoding="UTF-8"?>
<test-driver version="1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../testDefinition.xsd">

  <data name="cacheType">CLIENT</data>

  <data name="distinctKeys">
    <list>
      <item>100</item>
    </list>
  </data>
  <data name="valueSizes">
    <list>
      <item>100</item>
    </list>
  </data>

  <data name="numThreads">
    <list>
      <item>1</item>
    </list>
  </data>

  <data name="keyType">int</data>
  <data name="isPdx">true</data>
  <data name="useTransactions">true</data>
  <data name="ThinClientRegion">
    <snippet>
      <region name="Portfolios">
        <region-attributes caching-enabled="true" client-notification="true">
        </region-attributes>
      </region>
    </snippet>
  </data>
  <data name="regionSpec">ThinClientRegion</data>

  <client-set name="JCS1" hostGroup="CS"/>
  <client-set name="JCS2" hostGroup="CS"/>
  <client-set name="ThinClient"/>
  <client-set name="Feeder"/>

  <test name="serialEntryEvent" description="doing operations serially">
    <task name="SetupCacheServer" action="doRunProcess" container="utils" waitTime="5m">
      <data name="program">setupJavaServers</data>
      <data name="arguments">-c 2 -e CLASSPATH=\$BUILDDIR/framework/lib/javaobject.jar:\$CLASSPATH Generics/parReg/pdx/RemoteQuery/csPR.xml</data>
      <client-set name="JCS1"/>
    </task>
    <task name="StartCacheServers" action="doRunProcess" container="utils" waitTime="5m" parallel="true">
      <data name="program">startJavaServers</data>
      <data name="arguments">1</data>
      <client-set name="JCS1"/>
    </task>
    <task name="StartCacheServers" action="doRunProcess" container="utils" waitTime="5m" parallel="true">
      <data name="program">startJavaServers</data>
      <data name="arguments">2</data>
      <client-set name="JCS2"/>
    </task>
    <task name="CreateRegion" action="doCreateUserDefineRegion" container="querytests" waitTime="5m">
      <data name="regionName">Portfolios</data>
      <data name="regionSpec">ThinClientRegion</data>
      <client-set name="ThinClient"/>
      <client-set name="Feeder"/>
    </task>
    <task name="Register CQ" action="doRegisterCqForConc" container="querytests" waitTime="5m">
      <client-set name="ThinClient"/>
      <data name="query">
         <list>
           <item>select * from /Portfolios</item>
          </list>
      </data>
    </task>
    <task name="PopulateRegion" action="doPopulateUserObject" container="querytests" waitTime="10m">
      <data name="regionName">Portfolios</data>
      <client-set name="Feeder"/>
      <data name="objectType">AutoPortfolioPdx</data>
    </task>
    <task name="UpdateRegion" action="doPopulateUserObject" container="querytests" waitTime="10m">
      <data name="regionName">Portfolios</data>
      <client-set name="Feeder"/>
      <data name="objectType">AutoPortfolioPdx</data>
    </task>
    <task name="Running Query with initial result" action="doRunQuery" container="querytests" waitTime="15m">
      <client-set name="ThinClient"/>
      <data name="cq">true</data>
      <data name="query">
         <list>
           <item>select * from /Portfolios</item>
          </list>
      </data>
      <data name="resultSize">
        <list>
          <item>100</item>
        </list>
      </data>
    </task>
    <task name="destroyKeys" action="doDestroyUserObject" container="querytests" waitTime="10m">
      <data name="regionName">Portfolios</data>
      <client-set name="Feeder"/>
      <data name="objectType">AutoPortfolioPdx</data>
      <data name="destroyKeys">20</data>
    </task>
    <task name="stop all cqs" action="doCqState" container="querytests" waitTime="5m">
      <data name="cqState">stopped</data>
      <client-set name="ThinClient"/>
    </task>
    <task name="Running Query with initial result" action="doRunQuery" container="querytests" waitTime="15m">
      <client-set name="ThinClient"/>
      <data name="cq">true</data>
      <data name="query">
         <list>
           <item>select * from /Portfolios</item>
         </list>
      </data>
      <data name="resultSize">
        <list>
          <item>80</item>
         </list>
      </data>
    </task>
    <task name="PopulateRegion" action="doPopulateUserObject" container="querytests" waitTime="10m">
      <data name="regionName">Portfolios</data>
      <client-set name="Feeder"/>
      <data name="objectType">AutoPortfolioPdx</data>
    </task>
    <task name="doSleep" action="doSleep" container="utils" waitTime="60">
      <data name="sleepTime">5</data>
      <client-set name="ThinClient"/>
    </task>
    <task name="doCqOperations" action="doCQOperation" container="querytests" waitTime="10m">
      <data name="cqOps">
        <oneof>
          <item>getCQAttributes</item>
          <item>getCQName</item>
          <item>getQuery</item>
          <item>getQueryString</item>
          <item>getStatistics</item>
          <item>getStatistics</item>
          <item>getStatistics</item>
        </oneof>
      </data>
      <data name="workTime">5m</data>
      <data name="opsSecond">5</data>
      <client-set name="ThinClient"/>
    </task>
    <task name="verify CQ listener is called" action="doVerifyCQListenerInvoked" container="querytests" waitTime="5m">
      <client-set name="ThinClient"/>
    </task>
    <task name="stop all cqs" action="doCqState" container="querytests" waitTime="5m">
      <data name="cqState">stopped</data>
      <client-set name="ThinClient"/>
    </task>
    <task name="Running Query with initial result" action="doRunQuery" container="querytests" waitTime="15m">
      <client-set name="ThinClient"/>
      <data name="cq">true</data>
      <data name="query">
         <list>
           <item>select * from /Portfolios</item>
         </list>
      </data>
      <data name="resultSize">
        <list>
          <item>100</item>
        </list>
      </data>
    </task>
    <task name="destroyKeys" action="doDestroyUserObject" container="querytests" waitTime="10m">
      <data name="regionName">Portfolios</data>
      <client-set name="Feeder"/>
      <data name="objectType">AutoPortfolioPdx</data>
      <data name="destroyKeys">100</data>
    </task>
    <task name="verify CQ listener is called" action="doVerifyCQListenerInvoked" container="querytests" waitTime="5m">
      <client-set name="ThinClient"/>
    </task>
    <task name="stop all cqs" action="doCqState" container="querytests" waitTime="5m">
      <data name="cqState">stopped</data>
      <client-set name="ThinClient"/>
    </task>
    <task name="execute all cqs" action="doCqState" container="querytests" waitTime="5m">
      <data name="cqState">execute</data>
      <client-set name="ThinClient"/>
    </task>
    <task name="verify CQ listener is called" action="doVerifyCQListenerInvoked" container="querytests" waitTime="5m">
      <client-set name="ThinClient"/>
    </task>
    <task name="PopulateRegion" action="doPopulateUserObject" container="querytests" waitTime="10m">
      <data name="regionName">Portfolios</data>
      <client-set name="Feeder"/>
      <data name="objectType">AutoPortfolioPdx</data>
    </task>
    <task name="verify CQ listener is called" action="doVerifyCQListenerInvoked" container="querytests" waitTime="5m">
      <client-set name="ThinClient"/>
    </task>
    <task name="close all cqs" action="doCqState" container="querytests" waitTime="5m">
      <data name="cqState">closed</data>
      <client-set name="ThinClient"/>
    </task>
    <task name="close cache for CPP clients" action="doCloseCache" container="querytests" waitTime="5m"/>
    <task name="StopCacheServers" action="doRunProcess" container="utils" waitTime="5m" parallel="true">
      <data name="program">stopJavaServers</data>
      <data name="arguments">1</data>
      <client-set name="JCS1"/>
    </task>
    <task name="StopCacheServers" action="doRunProcess" container="utils" waitTime="5m" parallel="true">
      <data name="program">stopJavaServers</data>
      <data name="arguments">2</data>
      <client-set name="JCS2"/>
    </task>
  </test>

</test-driver>
