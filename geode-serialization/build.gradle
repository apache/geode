/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: "${rootDir}/${scriptDir}/standard-subproject-configuration.gradle"

apply from: "${project.projectDir}/../gradle/publish-java.gradle"
apply from: "${project.projectDir}/../gradle/warnings.gradle"

dependencies {
  implementation(platform(project(':boms:geode-all-bom')))

  //Geode-common has annotations and other pieces used by geode-serialization
  implementation(project(':geode-common'))

  //FastUtil contains optimized collections that are used in multiple places in core
  implementation('it.unimi.dsi:fastutil')

  //Log4j is used everywhere
  implementation('org.apache.logging.log4j:log4j-api')

  testImplementation(project(':geode-junit')) {
    exclude module: 'geode-serialization'
  }
  testImplementation(project(':geode-concurrency-test'))

  testImplementation('com.tngtech.archunit:archunit-junit4')
  testImplementation('org.apache.bcel:bcel')
  testImplementation('org.mockito:mockito-core')
  testImplementation('junit:junit')
  testImplementation('org.assertj:assertj-core')

  testRuntime(project(path: ':geode-old-versions', configuration: 'testOutput'))

  integrationTestImplementation(project(':geode-junit')) {
    exclude module: 'geode-serialization'
  }
  integrationTestImplementation(project(':geode-dunit')) {
    exclude module: 'geode-serialization'
  }
  integrationTestImplementation('pl.pragmatists:JUnitParams')
  distributedTestImplementation(project(':geode-junit')) {
    exclude module: 'geode-serialization'
  }
  distributedTestImplementation(project(':geode-dunit')) {
    exclude module: 'geode-serialization'
  }
  distributedTestImplementation('pl.pragmatists:JUnitParams')
  distributedTestRuntimeOnly(project(path: ':geode-old-versions', configuration: 'testOutput'))
  upgradeTestRuntimeOnly(project(path: ':geode-old-versions', configuration: 'testOutput'))
}

distributedTest {
  // Some tests have inner tests that should be ignored
  exclude "**/*\$*.class"
}


