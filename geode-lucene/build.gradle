/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dependencies {
    compile project(':geode-core')
    compile project(':geode-common')

    compile 'org.apache.lucene:lucene-analyzers-common:' + project.'lucene.version'
    compile 'org.apache.lucene:lucene-core:' + project.'lucene.version'
    compile 'org.apache.lucene:lucene-queries:' + project.'lucene.version'
    compile ('org.apache.lucene:lucene-analyzers-phonetic:' + project.'lucene.version')
    compile ('org.apache.lucene:lucene-queryparser:' + project.'lucene.version') {
      exclude module: 'lucene-sandbox'
    }

    testCompile project(':geode-junit')

    //Lucene test framework.
    testCompile 'org.apache.lucene:lucene-test-framework:' + project.'lucene.version'
    testCompile 'org.apache.lucene:lucene-codecs:' + project.'lucene.version'
    testCompile 'com.pholser:junit-quickcheck-core:' + project.'junit-quickcheck.version'
    testCompile 'org.apache.lucene:lucene-analyzers-phonetic:' + project.'lucene.version'
    testCompile 'com.pholser:junit-quickcheck-generators:' + project.'junit-quickcheck.version'
    testCompile files(project(':geode-core').sourceSets.test.output)
    testCompile files(project(':geode-old-versions').sourceSets.main.output)

}

//The lucene integration tests don't have any issues that requiring forking
integrationTest.forkEvery 0

task xjc (type: Exec){
    description 'Generates initial, incomplete POJO configuration objects using JAXB / xjc.  ' +
            'Use this task as a reference to keep etc/example-bindings.xjb ' +
            'and the etc/*.episode files up to date.'
    dependsOn(':geode-core:xjc')

    def sourceXsd = "${projectDir}/src/main/resources/META-INF/schemas/geode.apache.org/schema/lucene/lucene-1.0.xsd"
    def jaxBindings = "${projectDir}/src/main/resources/META-INF/schemas/geode.apache.org/schema/lucene/bindings.xjb"
    def classPath = "${projectDir}/../geode-core/src/main/java"
    def coreEpisode = "${projectDir}/../etc/geode-core.episode"

    def outputDir = "${projectDir}/build/generated-src/main/"
    def outputPackage = "org.apache.geode.cache.configuration"
    def outputEpisode = "${projectDir}/../etc/geode-lucene.episode"

    doFirst{
        workingDir projectDir
        mkdir outputDir
    }

    workingDir projectDir
    commandLine 'sh', '-c',
            "xjc -extension -p ${outputPackage} -d ${outputDir} -episode ${outputEpisode} " +
                    "-no-header -b ${coreEpisode} -b ${jaxBindings} -classpath ${classPath} " +
                    "-contentForWildcard -npa ${sourceXsd}"
}
