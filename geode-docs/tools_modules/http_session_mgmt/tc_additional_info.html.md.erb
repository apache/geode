---
title:  General Information on HTTP Session Management
---

<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

This section provides information on sticky load balancers, session expiration, additional <%=vars.product_name%> property changes, serialization and more.

## <a id="tc_additional_info__section_78F53B3F4301466EA0E5DF277CF33A71" class="no-quick-link"></a>Sticky Load Balancers

Typically, session replication will be used in conjunction with a load balancer enabled for sticky sessions. 
Sessions should be unique across application servers. With Tomcat, this can be accomplished by setting a JVM route (`JVMRoute=value`). Refer to [SpringSource ERS](http://static.springsource.com/projects/ers/4.0/getting-started/htmlsingle/getting-started.html)
as a possible [load balancing](http://static.springsource.com/projects/ers/4.0/getting-started/htmlsingle/getting-started.html#load-balancing) solution.

## <a id="tc_additional_info__section_C7C4365EA2D84636AE1586F187007EC4" class="no-quick-link"></a>Session Expiration

To set the session expiration value, you must change the `session-timeout` value specified in your application server's `WEB-INF/web.xml` file. 
This value will override the <%=vars.product_name%> inactive interval, which is specified in Tomcat, for example, by `maxInactiveInterval` within `context.xml`.

When a session expires, it gets removed from the application server and from all <%=vars.product_name%> servers when running in client-server mode.

## <a id="tc_additional_info__section_5CE5FF6F55DB462E8B2A336A0AF7515E" class="no-quick-link"></a>Making Additional <%=vars.product_name%> Property Changes

If you want to change additional <%=vars.product_name%> property values, refer to instructions on manually changing property values as specified in the <%=vars.product_name%> module documentation for Tomcat ([Changing the Default <%=vars.product_name%> Configuration in the Tomcat Module](tomcat_changing_gf_default_cfg.html#tomcat_changing_gf_default_cfg)) and Application Servers ([Changing the Default <%=vars.product_name%> Configuration in the AppServers Module](weblogic_changing_gf_default_cfg.html#weblogic_changing_gf_default_cfg)).

## <a id="tc_additional_info__section_0013BDC875A44344B7B062F46AFA073C" class="no-quick-link"></a>Module Version Information

To acquire <%=vars.product_name%> module version information, look in the web server's log file for a message similar to:

``` pre
INFO: Initializing <%=vars.product_name%> Modules
Java version:   1.0.0 user1 041216 2016-11-12 11:18:37 -0700
          javac 1.<%=vars.min_java_version%>.0_<%=vars.min_java_update%>
Native version: native code unavailable
Source revision: 857bb75916640a066eb832b43b3c805f0dd7ed0b
Source repository: develop
Running on: /192.0.2.0, 8 cpu(s), x86_64 Mac OS X 10.11.4
```

## Object Serialization

Objects managed by the HTTP Session Management Module must be serializable since the session's objects are serialized before being stored in the region.
