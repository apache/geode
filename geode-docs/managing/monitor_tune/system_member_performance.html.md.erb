---
title:  System Member Performance
---

<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

You can modify some configuration parameters to improve system member performance.

Before doing so, you should understand [Basic Configuration and Programming](../../basic_config/book_intro.html).

-   **[Distributed System Member Properties](../../managing/monitor_tune/system_member_performance_distributed_system_member.html)**

    Several performance-related properties apply to a cache server or application that connects to the distributed system.

-   **[JVM Memory Settings and System Performance](../../managing/monitor_tune/system_member_performance_jvm_mem_settings.html)**

    You configure JVM memory settings for the Java application by adding parameters to the java invocation. For the cache server, you add them to the command-line parameters for the gfsh `start server` command.

-   **[Garbage Collection and System Performance](../../managing/monitor_tune/system_member_performance_garbage.html)**

    If your application exhibits unacceptably high latencies, you might improve performance by modifying your JVMâ€™s garbage collection behavior.

-   **[Connection Thread Settings and Performance](../../managing/monitor_tune/system_member_performance_connection_thread_settings.html)**

    When many peer processes are started concurrently, you can improve the distributed system connect time can by setting the p2p.HANDSHAKE\_POOL\_SIZE system property value to the expected number of members.


