---
title:  Basic Configuration and Programming
---

<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

*Basic Configuration and Programming* describes how to configure distributed system and cache properties for your Apache Geode installation. For your applications, it provides guidance for writing code to manage your cache and distributed system connection, data regions, and data entries, including custom classes.

-   **[Distributed System and Cache Configuration](../basic_config/config_concepts/chapter_overview.html)**

    To work with your Apache Geode applications, you use a combination of configuration files and application code.

-   **[Cache Management](../basic_config/the_cache/chapter_overview.html)**

    The Geode cache is the entry point to Geode caching management. Geode provides different APIs and XML configuration models to support the behaviors of different members.

-   **[Data Regions](../basic_config/data_regions/chapter_overview.html)**

    The region is the core building block of the Apache Geode distributed system. All cached data is organized into data regions and you do all of your data puts, gets, and querying activities against them.

-   **[Data Entries](../basic_config/data_entries_custom_classes/chapter_overview.html)**

    The data entry is the key/value pair where you store your data. You can manage your entries individually and in batches. To use domain objects for your entry values and keys, you need to follow Apache Geode requirements for data storage and distribution.


