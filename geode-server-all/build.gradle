/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'java-library'
}

apply from: "${rootDir}/${scriptDir}/standard-subproject-configuration.gradle"
apply from: "${rootDir}/${scriptDir}/publish-java.gradle"
apply from: "${rootDir}/${scriptDir}/japicmp.gradle"


dependencies {
  api(enforcedPlatform(project(':boms:geode-all-bom')))
  api(project(':geode-common'))
  api(project(':geode-connectors'))
  api(project(':geode-core'))
  api(project(':geode-cq'))
  api(project(':geode-for-redis'))
  api(project(':geode-gfsh'))
  api(project(':geode-log4j'))
  api(project(':geode-logging'))
  api(project(':geode-management'))
  api(project(':geode-lucene'))
  api(project(':geode-memcached'))
  api(project(':geode-old-client-support'))
  api(project(':geode-rebalancer'))
  api(project(':geode-serialization'))
  api(project(':geode-tcp-server'))
  api(project(':geode-unsafe'))
  api(project(':geode-wan'))

  integrationTestImplementation(project(':geode-junit'))
  integrationTestImplementation('junit:junit')
}

// Move the geode-dependencies jar build to here too, and this becomes a java-library, not a java-platform

// Override some things from java.gradle
jar {
  manifest {
    attributes.put("Class-Path", configurations.runtimeClasspath.files.collect {it.name}.join(' '))
  }
}


integrationTest {
  systemProperty 'test.buildVersion', version
  systemProperty 'test.buildDirectory', buildDir
  dependsOn(tasks.named('jar'))
}
