# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

jobs:
- name: (( grab metadata.job.name ))
  serial: false
  public: true
  plan:
  - get: geode-ci
  - aggregate:
    - get: geode
      passed: [Build]
    - get: geode-build-version
      passed: [Build]
      trigger: true
  - task: cleanup-java-processes
    tags: [(( grab metadata.job.tags ))]
    config:
      platform: windows
      run:
        path: powershell
        args:
        - -command
        - |
          gwmi win32_process -filter 'name = "java.exe"' | select commandline | format-list
          kill -name java -force
          exit 0
  - task: execute_tests
    timeout: 4h
    tags: [(( grab metadata.job.tags ))]
    config:
      inputs:
        - name: geode-ci
        - name: geode
      outputs:
        - name: built-geode
      platform: windows
      params:
        CALL_STACK_TIMEOUT: (( grab metadata.job.call_stack_timeout ))
        DUNIT_PARALLEL_FORKS: 0
        MAINTENANCE_VERSION: (( grab metadata.geode-build-branch ))
        PARALLEL_DUNIT: false
        PUBLIC_BUCKET: ((!public-bucket))
        SERVICE_ACCOUNT: ((!concourse-gcp-account))
        JAVA_HOME: "C:\\progra~1\\java\\jdk1.8.0_181"
      run:
        path: bash
        args:
          - geode-ci/ci/scripts/windows/test-run.sh
          - (( grab metadata.job.gradle_task ))
          - (( grab metadata.job.artifact_slug ))
          - (( grab metadata.job.test_category || "" ))
    ensure:
      aggregate:
      - task: archive_results
        timeout: 1h
        tags: [(( grab metadata.job.tags ))]
        config:
          inputs:
            - name: geode-ci
            - name: geode-build-version
            - name: built-geode
          platform: windows
          params:
            MAINTENANCE_VERSION: (( grab metadata.geode-build-branch ))
            SERVICE_ACCOUNT: ((!concourse-gcp-account))
            PUBLIC_BUCKET: ((!public-bucket))
          run:
            path: bash
            args:
              - geode-ci/ci/scripts/windows/test_archive.sh
              - (( grab metadata.job.gradle_task ))
              - (( grab metadata.job.artifact_slug ))

