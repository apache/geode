#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
resources:
# apachegeode-build-concourse resources
- name: apachegeode-build-concourse-dockerfile
  type: git
  source:
    uri: https://github.com/((!geode-fork))/geode.git
    branch: ((!geode-build-branch))
    paths:
    - ci/docker/*

- name: apachegeode-build-concourse-docker-image
  type: docker-image
  source:
    username: ((!docker-username))
    password: ((!docker-password))
    repository: gcr.io/apachegeode-ci/((!docker-image-prefix))((!docker-image-name))

- name: openjdk8-docker-image
  type: docker-image
  source:
    repository: openjdk
    tag: 8
    skip_download: true

- name: google-geode-builder
  type: git
  source:
    uri: https://github.com/((!geode-fork))/geode.git
    branch: ((!geode-build-branch))
    paths:
    - ci/images/google-geode-builder

jobs:
# apachegeode-build-concourse
- name: build-apachegeode-build-concourse-docker-image
  public: ((!public-pipelines))
  serial: true
  plan:
  - aggregate:
    - get: openjdk8-docker-image
      trigger: true
    - get: apachegeode-build-concourse-dockerfile
      trigger: true
  - put: apachegeode-build-concourse-docker-image
    params:
      build: apachegeode-build-concourse-dockerfile/ci/docker
      tag_as_latest: true

- name: build-google-geode-builder
  public: ((!public-pipelines))
  serial: true
  plan:
  - aggregate:
    - get: google-geode-builder
      trigger: true
    - get: apachegeode-build-concourse-docker-image
  - task: build-image
    image: apachegeode-build-concourse-docker-image
    config:
      inputs:
      - name: google-geode-builder
      outputs:
      - name: results
      platform: linux
      params:
        GCP_CONCOURSE_KEY: ((!concourse-gcp-key-encoded))
      run:
        path: google-geode-builder/ci/images/google-geode-builder/build_image.sh
