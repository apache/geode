#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
image_resource: &docker-geode-build-image
  type: docker-image
  source:
    username: ((!docker-username))
    password: ((!docker-password))
    repository: gcr.io/apachegeode-ci/((!docker-image-name))
    tag: latest

resource_types:
  - name: gcs-resource
    type: docker-image
    source:
      repository: frodenas/gcs-resource
  - name: email
    type: docker-image
    source:
      repository: pcfseceng/email-resource

resources:
- name: docker-test-image
  type: docker-image
  source:
    username: ((!docker-username))
    password: ((!docker-password))
    repository: gcr.io/apachegeode-ci/((!docker-image-name))
- name: geode
  type: git
  source:
    uri: https://github.com/apache/geode.git
    branch: develop
- name: geode-ci
  type: git
  source:
    depth: 1
    uri: https://github.com/apache/geode.git
    branch: develop
    paths:
    - ci/*
- name: geode-build-version
  type: semver
  source:
    driver: gcs
    bucket: ((!concourse-bucket))
    key: ((!version-key))
    json_key: ((!concourse-gcp-key))
    initial_version: 1.3.0
- name: geode-build-artifact
  type: gcs-resource
  source:
    bucket: ((!public-bucket))
    json_key: ((!concourse-gcp-key))
    regexp: artifacts/develop/geodefiles-(.*).tgz
- name: send-notification-email
  type: email
  source:
    smtp:
      host: ((!source-email-server))
      port: "587"
      username: ((!source-email-username))
      password: ((!source-email-password))
    from: ((!source-email-address))
    to: [ ((!notification-email-address)) ]
jobs:
- name: Build
  serial: true
  public: true
  plan:
    - get: geode
      trigger: true
    - get: geode-ci
    - get: geode-build-version
      params: {pre: build}
    - task: build
      config:
        platform: linux
        inputs:
        - name: geode
        - name: geode-ci
        - name: geode-build-version
        outputs:
        - name: built-geode
        - name: results
        image_resource: *docker-geode-build-image
        params:
          MAINTENANCE_VERSION: ((!maintenance-version))
          SERVICE_ACCOUNT: ((!concourse-gcp-account))
          PUBLIC_BUCKET: ((!public-bucket))
        run:
          path: geode-ci/ci/scripts/build.sh
      on_failure:
        aggregate:
          - put: send-notification-email
            params:
              subject: results/subject
              body: results/body
      ensure:
        aggregate:
          - put: geode-build-artifact
            params:
              file: built-geode/geodefiles-*.tgz
          - put: geode-build-version
            params:
              file: results/number
- name: DistributedTest
  serial: true
  public: true
  plan:
    - aggregate:
      - get: geode
        passed: [Build]
        trigger: true
      - get: geode-ci
      - get: geode-build-version
        passed: [Build]
      - get: docker-test-image
        params:
          rootfs: true
    - task: runtests
      privileged: true
      timeout: 6h
      config:
        inputs:
          - name: geode
          - name: geode-ci
          - name: docker-test-image
          - name: geode-build-version
        platform: linux
        outputs:
          - name: built-geode
        image_resource: *docker-geode-build-image
        params:
          MAINTENANCE_VERSION: ((!maintenance-version))
          SERVICE_ACCOUNT: ((!concourse-gcp-account))
          PUBLIC_BUCKET: ((!public-bucket))
          PARALLEL_DUNIT: true
          DUNIT_PARALLEL_FORKS: 7
        run:
          args:
          - distributedTest
          - distributedtestfiles
          path: geode-ci/ci/scripts/test-run.sh
      on_failure:
        aggregate:
          - put: send-notification-email
            params:
              subject: built-geode/subject
              body: built-geode/body
      ensure:
         aggregate:
         - task: archive-results
           config:
             inputs:
               - name: geode-ci
               - name: geode-build-version
               - name: built-geode
             platform: linux
             image_resource: *docker-geode-build-image
             params:
               MAINTENANCE_VERSION: ((!maintenance-version))
               SERVICE_ACCOUNT: ((!concourse-gcp-account))
               PUBLIC_BUCKET: ((!public-bucket))
             run:
               args:
               - distrbutedTest
               - distributedtestfiles
               path: geode-ci/ci/scripts/test-archive.sh

- name: AcceptanceTest
  serial: true
  public: true
  plan:
    - aggregate:
      - get: geode
        passed: [Build]
        trigger: true
      - get: geode-ci
      - get: geode-build-version
        passed: [Build]
      - get: docker-test-image
        params:
          rootfs: true
    - task: runtests
      privileged: true
      timeout: 6h
      config:
        inputs:
          - name: geode
          - name: geode-ci
          - name: docker-test-image
          - name: geode-build-version
        platform: linux
        outputs:
          - name: built-geode
        image_resource: *docker-geode-build-image
        params:
          MAINTENANCE_VERSION: ((!maintenance-version))
          SERVICE_ACCOUNT: ((!concourse-gcp-account))
          PUBLIC_BUCKET: ((!public-bucket))
          PARALLEL_DUNIT: true
          DUNIT_PARALLEL_FORKS: 1
        run:
          args:
          - :geode-assembly:acceptanceTest
          - acceptancetestfiles
          path: geode-ci/ci/scripts/test-run.sh
      on_failure:
        aggregate:
          - put: send-notification-email
            params:
              subject: built-geode/subject
              body: built-geode/body
      ensure:
         aggregate:
         - task: archive-results
           config:
             inputs:
               - name: geode
               - name: geode-ci
               - name: geode-build-version
               - name: built-geode
             platform: linux
             image_resource: *docker-geode-build-image
             params:
               MAINTENANCE_VERSION: ((!maintenance-version))
               SERVICE_ACCOUNT: ((!concourse-gcp-account))
               PUBLIC_BUCKET: ((!public-bucket))
             run:
               args:
               - :geode-assembly:acceptanceTest
               - acceptancetestfiles
               path: geode-ci/ci/scripts/test-archive.sh

- name: IntegrationTest
  serial: true
  public: true
  plan:
    - aggregate:
      - get: geode
        passed: [Build]
        trigger: true
      - get: geode-ci
      - get: geode-build-version
        passed: [Build]
      - get: docker-test-image
        params:
          rootfs: true
    - task: runtests
      privileged: true
      timeout: 6h
      config:
        inputs:
          - name: geode
          - name: geode-ci
          - name: docker-test-image
          - name: geode-build-version
        platform: linux
        outputs:
          - name: built-geode
        image_resource: *docker-geode-build-image
        params:
          MAINTENANCE_VERSION: ((!maintenance-version))
          SERVICE_ACCOUNT: ((!concourse-gcp-account))
          PUBLIC_BUCKET: ((!public-bucket))
          PARALLEL_DUNIT: true
          DUNIT_PARALLEL_FORKS: 1
        run:
          args:
          - integrationTest
          - integrationtestfiles
          path: geode-ci/ci/scripts/test-run.sh
      on_failure:
        aggregate:
          - put: send-notification-email
            params:
              subject: built-geode/subject
              body: built-geode/body
      ensure:
         aggregate:
         - task: archive-results
           config:
             inputs:
               - name: geode
               - name: geode-ci
               - name: geode-build-version
               - name: built-geode
             platform: linux
             image_resource: *docker-geode-build-image
             params:
               MAINTENANCE_VERSION: ((!maintenance-version))
               SERVICE_ACCOUNT: ((!concourse-gcp-account))
               PUBLIC_BUCKET: ((!public-bucket))
             run:
               args:
               - integrationTest
               - integrationtestfiles
               path: geode-ci/ci/scripts/test-archive.sh

- name: FlakyTest
  serial: true
  public: true
  plan:
    - aggregate:
      - get: geode
        passed: [Build]
        trigger: true
      - get: geode-ci
      - get: geode-build-version
        passed: [Build]
      - get: docker-test-image
        params:
          rootfs: true
    - task: runtests
      privileged: true
      timeout: 6h
      config:
        inputs:
          - name: geode
          - name: geode-ci
          - name: docker-test-image
          - name: geode-build-version
        platform: linux
        outputs:
          - name: built-geode
        image_resource: *docker-geode-build-image
        params:
          MAINTENANCE_VERSION: ((!maintenance-version))
          SERVICE_ACCOUNT: ((!concourse-gcp-account))
          PUBLIC_BUCKET: ((!public-bucket))
        run:
          args:
          - flakyTest
          - flakytestfiles
          path: geode-ci/ci/scripts/test-run.sh
      on_failure:
        aggregate:
          - put: send-notification-email
            params:
              subject: built-geode/subject
              body: built-geode/body
      ensure:
         aggregate:
         - task: archive-results
           config:
             inputs:
               - name: geode
               - name: geode-ci
               - name: geode-build-version
               - name: built-geode
             platform: linux
             image_resource: *docker-geode-build-image
             params:
               MAINTENANCE_VERSION: ((!maintenance-version))
               SERVICE_ACCOUNT: ((!concourse-gcp-account))
               PUBLIC_BUCKET: ((!public-bucket))
             run:
               args:
               - flakyTest
               - flakytestfiles
               path: geode-ci/ci/scripts/test-archive.sh

