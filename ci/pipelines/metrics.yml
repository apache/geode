#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
image_resource: &docker-geode-build-image
  type: docker-image
  source:
    username: ((!docker-username))
    password: ((!docker-password))
    repository: gcr.io/apachegeode-ci/((!docker-image-name))
    tag: latest

resources:
- name: once-a-day
  type: time
  source:
    interval: 24h
- name: geode-ci
  type: git
  source:
    depth: 1
    uri: https://github.com/apache/geode.git
    branch: develop
    paths:
    - ci/*

jobs:
- name: GeodeBuildMetrics
  serial: true
  public: true
  plan:
  - get: geode-ci
  - get: once-a-day
    trigger: true
  - task: get_metrics
    config:
      inputs:
        - name: geode-ci
      outputs:
        - name: workspace
      platform: linux
      image_resource: *docker-geode-build-image
      params:
        CONCOURSE_URL: https://concourse.apachegeode-ci.info
        CONCOURSE_PIPELINE: develop
        CONCOURSE_JOB: Build
        COUNT: 50
      run:
        args: [workspace]
        path: geode-ci/ci/scripts/concourse_job_performance.sh

- name: GeodeAcceptanceTestMetrics
  serial: true
  public: true
  plan:
  - get: geode-ci
  - get: once-a-day
    trigger: true
  - task: get_metrics
    config:
      inputs:
        - name: geode-ci
      outputs:
        - name: workspace
      platform: linux
      image_resource: *docker-geode-build-image
      params:
        CONCOURSE_URL: https://concourse.apachegeode-ci.info
        CONCOURSE_PIPELINE: develop
        CONCOURSE_JOB: AcceptanceTest
        COUNT: 50
      run:
        args: [workspace]
        path: geode-ci/ci/scripts/concourse_job_performance.sh

- name: GeodeDistributedTestMetrics
  serial: true
  public: true
  plan:
  - get: geode-ci
  - get: once-a-day
    trigger: true
  - task: get_metrics
    config:
      inputs:
        - name: geode-ci
      outputs:
        - name: workspace
      platform: linux
      image_resource: *docker-geode-build-image
      params:
        CONCOURSE_URL: https://concourse.apachegeode-ci.info
        CONCOURSE_PIPELINE: develop
        CONCOURSE_JOB: DistributedTest
        COUNT: 50
      run:
        args: [workspace]
        path: geode-ci/ci/scripts/concourse_job_performance.sh

- name: GeodeIntegrationTestMetrics
  serial: true
  public: true
  plan:
  - get: geode-ci
  - get: once-a-day
    trigger: true
  - task: get_metrics
    config:
      inputs:
        - name: geode-ci
      outputs:
        - name: workspace
      platform: linux
      image_resource: *docker-geode-build-image
      params:
        CONCOURSE_URL: https://concourse.apachegeode-ci.info
        CONCOURSE_PIPELINE: develop
        CONCOURSE_JOB: IntegrationTest
        COUNT: 50
      run:
        args: [workspace]
        path: geode-ci/ci/scripts/concourse_job_performance.sh

- name: GeodeFlakyTestMetrics
  serial: true
  public: true
  plan:
  - get: geode-ci
  - get: once-a-day
    trigger: true
  - task: get_metrics
    config:
      inputs:
        - name: geode-ci
      outputs:
        - name: workspace
      platform: linux
      image_resource: *docker-geode-build-image
      params:
        CONCOURSE_URL: https://concourse.apachegeode-ci.info
        CONCOURSE_PIPELINE: develop
        CONCOURSE_JOB: FlakyTest
        COUNT: 50
      run:
        args: [workspace]
        path: geode-ci/ci/scripts/concourse_job_performance.sh
