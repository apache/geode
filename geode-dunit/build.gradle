/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dependencies {
  gradleLint.ignore {
    // See GEODE-6128 -- ignore xml-apis in linter to avoid changes with every run.
    compile('xml-apis:xml-apis:1.4.01')
  }
  compile('org.hamcrest:hamcrest-core:1.3')
    compile('org.hamcrest:hamcrest-library:1.3')
    compile('org.hamcrest:hamcrest-all:1.3')
    compile('jline:jline:2.12')
    compile('mx4j:mx4j:3.0.2')
    compile('mx4j:mx4j-remote:3.0.2')
    compile('org.apache.shiro:shiro-core:1.4.0')
  compile(project(':geode-core'))
  //compileOnly files("${System.getProperty('java.home')}/../lib/tools.jar")

  compile(project(':geode-junit')) {
    exclude module: 'geode-core'
  }
  compile(project(':geode-json'))

  compile("org.apache.logging.log4j:log4j-api:${project.'log4j.version'}")
  compile("org.apache.logging.log4j:log4j-core:${project.'log4j.version'}")
  compile("commons-io:commons-io:${project.'commons-io.version'}")
  compile("org.apache.commons:commons-lang3:${project.'commons-lang3.version'}")
  compile("org.springframework.shell:spring-shell:${project.'spring-shell.version'}") {
    exclude module: 'aopalliance'
    exclude module: 'asm'
    exclude module: 'cglib'
    exclude module: 'guava'
    exclude module: 'spring-aop'
    exclude module: 'spring-context-support'
    exclude module: 'spring-core'
    ext.optional = true
  }
  compile("com.google.guava:guava:${project.'guava.version'}")

  compile("org.assertj:assertj-core:${project.'assertj-core.version'}")
  distributedTestCompile "org.mockito:mockito-core:${project.'mockito-core.version'}"
  compile("org.awaitility:awaitility:${project.'awaitility.version'}")

  compile("junit:junit:${project.'junit.version'}") {
    exclude module: 'hamcrest-core'
  }


  distributedTestRuntime(project(':geode-old-versions'))
}

distributedTest {
  // Some tests have inner tests that should be ignored
  exclude "**/*\$*.class"
}

